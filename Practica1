const Persona1 ={
    nombre:"David",
    edad:21,
    amigos:[
        {
            nombre:"Pepe",
            edad:21,
        },
        {
            nombre:"Paco",
            edad:20,
        }
    ],
}
const Persona2 ={
    nombre:"David",
    edad:21,
    amigos:[
        {
            nombre:"Pepe",
            edad:21,
        },
        {
            nombre:"Paco",
            edad:20,
        }
    ],
}

const vehiculo={
    marca:"Toyota",
    ruedas:4,
}

const Persona3 ={
    nombre:"David",
    edad:21,
    amigos:[
        {
            nombre:"Pepe",
            edad:21,
        },
        {
            nombre:"Paco",
            edad:20,
        }
    ],
}

//Funcion para imprimir cualquier objeto


const DeepPrint=(ob: object):void=>{
    Object.keys(ob).forEach(atrib=>{
        if(atrib in ob){
            if(typeof ob[atrib as keyof typeof ob]==='object'){
                console.log(atrib+": ");
                
                //Utilizamos recursividad
                DeepPrint(ob[atrib as keyof typeof ob])
            }else{
            console.log(atrib+": "+ob[atrib as keyof typeof ob]);
            }
            
        }
        
        
    })
}

console.log("Imprimiendo");

DeepPrint(vehiculo);
DeepPrint(Persona1);

//Funcion para clonar un objeto

const DeepClone=function (ob:object):object {
     if(typeof ob!=='object'){
        //En caso de que a no sea un objeto se retorna

         return ob;
     }
     const obClone=ob.constructor()//mediante
     

     for(var elements in ob){
         obClone[elements]= DeepClone(ob[elements as keyof typeof ob])//mediante recursividad iremos clonando cada elemento
     }
     return obClone;//Una vez terminada la recursividad devolvemos el objeto
}

const clone =DeepClone(Persona1);

//Funcion para comparar todos los valores de dos objetos

var DeepEqual=(ob1:object,ob2:Object):boolean=>{
    let equal:boolean=false;
    if(ob1===ob2){
        equal=true;
    }else if(ob1!=null&&ob2!=null){
        if(Object.keys(ob1).length!=Object.keys(ob2).length){
            equal= false
        }else{
            for(const elements in ob1) {

                if(ob2.hasOwnProperty(elements)){
                    equal=DeepEqual(ob1[elements as keyof typeof ob1],ob2[elements as keyof typeof ob2]);
                }else{
                    return false;
                }
            }
        }
    }
    else{
        equal= false
    }
    return equal;
}

console.log(DeepEqual(vehiculo,Persona1)); //Deberia salir false
console.log(DeepEqual(Persona1,Persona3)); //Deberia salir true
console.log(DeepEqual(clone,Persona1));  //Deberia salir true y ademas asi comprobar que se ha clonado perfectamente




